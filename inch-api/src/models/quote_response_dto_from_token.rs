/*
 * 1inch Aggregation protocol API
 *
 *  <h2>Ethereum Network</h2> Using 1inch Aggregation protocol API, you can find the best route to exchange assets and make the exchange. <br><br> Step by step: 1. Lookup addresses of tokens you want to swap, for example ‘0xxx’ , ‘0xxxx’ for DAI -> 1INCH 2. Check for allowance of 1inch router contract to spend source asset (/approve/allowance) 3. If necessary, give approval for 1inch router to spend source token (/approve/transaction) 4. Monitor the best exchange route using (/quote) 5. When you ready use to perform swap (/swap)  
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// QuoteResponseDtoFromToken : Source token info



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct QuoteResponseDtoFromToken {
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "decimals")]
    pub decimals: f32,
    #[serde(rename = "logoURI")]
    pub logo_uri: String,
    #[serde(rename = "wrappedNative", skip_serializing_if = "Option::is_none")]
    pub wrapped_native: Option<bool>,
}

impl QuoteResponseDtoFromToken {
    /// Source token info
    pub fn new(symbol: String, name: String, address: String, decimals: f32, logo_uri: String) -> QuoteResponseDtoFromToken {
        QuoteResponseDtoFromToken {
            symbol,
            name,
            tags: None,
            address,
            decimals,
            logo_uri,
            wrapped_native: None,
        }
    }
}


